/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hospital;
import java.text.SimpleDateFormat;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class Doctor extends javax.swing.JFrame {

    /**
     * Creates new form Doctor
     */
    public Doctor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtdocid = new javax.swing.JTextField();
        txtdocname = new javax.swing.JTextField();
        txtspecial = new javax.swing.JTextField();
        cmbtitle = new javax.swing.JComboBox<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        txtdocmobile = new javax.swing.JTextField();
        txtdocmail = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Add Doctor");

        jButton2.setBackground(new java.awt.Color(255, 255, 204));
        jButton2.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(204, 255, 204));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Doctor ID");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Doctor Name");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Title");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Speciality");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("DOB");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Mobile");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Email");

        txtdocid.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtdocid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdocidActionPerformed(evt);
            }
        });

        txtdocname.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtspecial.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtspecial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtspecialActionPerformed(evt);
            }
        });

        cmbtitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbtitle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr", "Mrs", "Miss" }));

        txtdocmobile.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtdocmobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdocmobileActionPerformed(evt);
            }
        });

        txtdocmail.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Register");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 153, 153));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(153, 153, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 0, 0));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "doc_id", "doc_name", "title", "speciality", "dob", "mobile", "doc_maile"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton6.setBackground(new java.awt.Color(102, 255, 204));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton6.setText("Show");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbtitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtdocmail, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtdocmobile, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                .addComponent(txtspecial, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtdocname, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(txtdocid, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addGap(54, 54, 54))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jButton1)
                .addGap(26, 26, 26)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtdocid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtdocname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(cmbtitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtspecial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtdocmobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jButton6)))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtdocmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton3)
                    .addComponent(jButton1))
                .addContainerGap(239, Short.MAX_VALUE))
        );

        jMenu1.setText("Home");

        jMenuItem1.setText("New");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Doctor");

        jMenuItem3.setBackground(new java.awt.Color(0, 153, 153));
        jMenuItem3.setText("Add Doctor");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Add Schedule");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Patient");
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Appontment");
        jMenuBar1.add(jMenu4);

        jMenu5.setText("Report");
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        new Home().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        new Doctor().setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.toBack();
        setVisible(false);
        //new Home().toFront();
       // new Home().setState(java.awt.Frame.NORMAL);
       
       // Create a single instance of the Home page and bring it to the front
    Home homePage = new Home(); // Assuming Home is the class name for the Home page
    homePage.setVisible(true);
    homePage.toFront();
    homePage.setState(java.awt.Frame.NORMAL);
    
    // Optionally, dispose of the current window if you want to close it
    this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtdocidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdocidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdocidActionPerformed

    private void txtspecialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtspecialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtspecialActionPerformed

    private void txtdocmobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdocmobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdocmobileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Doctor details adding code here:
        int doc_id;String doc_name,title,speciality, dob,mobile, doc_email; 
    
    doc_id = Integer.parseInt(txtdocid.getText());
    doc_name = txtdocname.getText();
    title = (String) cmbtitle.getSelectedItem();
    speciality=  txtspecial.getText();
     SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    dob = dateFormat.format(jDateChooser1.getDate());
    mobile = txtdocmobile.getText();
    doc_email = txtdocmail.getText();
    
    
    
    // Validate mobile number (10 digits only)
    if (!mobile.matches("\\d{10}")) {
    JOptionPane.showMessageDialog(null, "Please enter a valid 10-digit mobile number.");
    return;
    }
    
    
     // Validate email
    if (!doc_email.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) {
        JOptionPane.showMessageDialog(null, "Please enter a valid email address.");
        return;
    }

   
    
     try {
        String path = "jdbc:mysql://localhost/hospital";
        Connection con = DriverManager.getConnection(path, "root", "dew@123");
        Statement st = con.createStatement();
        
        st.executeUpdate("INSERT INTO doctor VALUES('" + doc_id + "','" + doc_name + "','" + title + "','" + speciality + "','" + dob + "','" + mobile + "','" +doc_email+"')");
        JOptionPane.showMessageDialog(null," Adding successfully ");
        
        txtdocid.setText(""); 
        txtdocname.setText(""); 
        cmbtitle.setSelectedIndex(0); 
        txtspecial.setText("");
        jDateChooser1.setDate(null);
        txtdocmobile.setText("");
        txtdocmail.setText("");

    } 
    catch (SQLException e) 
    {
        System.err.println(e.getMessage());
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
                                            

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // update code here:                                         
    int doc_id;
    String doc_name, title, speciality, dob, mobile, doc_email;

    doc_id = Integer.parseInt(txtdocid.getText());
    doc_name = txtdocname.getText();
    title = (String) cmbtitle.getSelectedItem();
    speciality = txtspecial.getText();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    dob = dateFormat.format(jDateChooser1.getDate());
    mobile = txtdocmobile.getText();
    doc_email = txtdocmail.getText();

    try {
        String path = "jdbc:mysql://localhost/hospital";
        Connection con = DriverManager.getConnection(path, "root", "dew@123");

        // Use a prepared statement for updating doctor details
        String updateQuery = "UPDATE doctor SET doc_name = ?, title = ?, speciality = ?, dob = ?, mobile = ?, doc_email = ? WHERE doc_id = ?";
        PreparedStatement pst = con.prepareStatement(updateQuery);
        
        pst.setString(1, doc_name);
        pst.setString(2, title);
        pst.setString(3, speciality);
        pst.setString(4, dob);
        pst.setString(5, mobile);
        pst.setString(6, doc_email);
        pst.setInt(7, doc_id);

        int rowsUpdated = pst.executeUpdate();

        if (rowsUpdated > 0) {
            JOptionPane.showMessageDialog(null, "Update successful!");
        } else {
            JOptionPane.showMessageDialog(null, "No record found with the specified Doctor ID.");
        }
        
        // Clear fields after update
        txtdocid.setText(""); 
        txtdocname.setText(""); 
        cmbtitle.setSelectedIndex(0); 
        txtspecial.setText("");
        jDateChooser1.setDate(null);
        txtdocmobile.setText("");
        txtdocmail.setText("");

    } catch (SQLException e) {
        System.err.println(e.getMessage());
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Search code here:
        int doc_id = Integer.parseInt(txtdocid.getText());
    try {
        String path = "jdbc:mysql://localhost/hospital";
        Connection con = DriverManager.getConnection(path, "root", "dew@123");
        String sql = "SELECT * FROM doctor WHERE doc_id = ?";
        
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setInt(1, doc_id);
        
        ResultSet rs = pst.executeQuery();
        
        if (rs.next()) {
            txtdocname.setText(rs.getString("doc_name"));
            cmbtitle.setSelectedItem(rs.getString("title"));
            txtspecial.setText(rs.getString("speciality"));
            jDateChooser1.setDate(rs.getDate("dob"));
            txtdocmobile.setText(rs.getString("mobile"));
            txtdocmail.setText(rs.getString("doc_email"));
        } else {
            JOptionPane.showMessageDialog(null, "Doctor not found.");
            // Clear fields if not found
            txtdocname.setText("");
            cmbtitle.setSelectedIndex(0);
            txtspecial.setText("");
            jDateChooser1.setDate(null);
            txtdocmobile.setText("");
            txtdocmail.setText("");
        }
        
        rs.close();
        pst.close();
        con.close();
        
    } catch (SQLException e) {
        System.err.println(e.getMessage());
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Show the table code here:
          try {
        String path = "jdbc:mysql://localhost/hospital";
        Connection con = DriverManager.getConnection(path, "root", "dew@123");
        
        // SQL query to get all doctors
        String sql = "SELECT * FROM doctor";
        Statement stmt = con.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        
        DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
        tblModel.setRowCount(0);  // Clear previous rows each time "show" is clicked


        // Loop through the result set and populate the JTable
        while (rs.next()) {
               String doc_id =String.valueOf( rs.getInt("doc_id")); // doc_id
               String doc_name= rs.getString("doc_name");   // doc_name
               String title= rs.getString("title");      // title
                String speciality=rs.getString("speciality"); // speciality
                Date dob = rs.getDate("dob");          // dob (Date)
                String mobile= rs.getString("mobile");     // mobile
                String doc_email=rs.getString("doc_email");   // doc_email
            
             // Convert Date to String (Optional: use SimpleDateFormat for a more readable format)
        String dobString = (dob != null) ? dob.toString() : "";

        // Prepare row data for the table
        String tbData[] = {doc_id, doc_name, title, speciality, dobString, mobile, doc_email};

        // Get the table model and add the row
        //DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
        tblModel.addRow(tbData);
    }

    // Close resources
    con.close();

} catch (SQLException e) {
    System.err.println(e.getMessage());
    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());

}  
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // delet code here:
        int doc_id = Integer.parseInt(txtdocid.getText());
    
    int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "Delete Confirmation", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            String path = "jdbc:mysql://localhost/hospital";
            Connection con = DriverManager.getConnection(path, "root", "dew@123");
            String sql = "DELETE FROM doctor WHERE doc_id = ?";
            
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setInt(1, doc_id);
            
            int rowsAffected = pst.executeUpdate();
            
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Doctor record deleted successfully.");
                // Clear the fields after deletion
                txtdocid.setText("");
                txtdocname.setText("");
                cmbtitle.setSelectedIndex(0);
                txtspecial.setText("");
                jDateChooser1.setDate(null);
                txtdocmobile.setText("");
                txtdocmail.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Doctor not found.");
            }
            
            pst.close();
            con.close();
            
        } catch (SQLException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }

    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbtitle;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtdocid;
    private javax.swing.JTextField txtdocmail;
    private javax.swing.JTextField txtdocmobile;
    private javax.swing.JTextField txtdocname;
    private javax.swing.JTextField txtspecial;
    // End of variables declaration//GEN-END:variables
}
